"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubTransactionResponseToJSON = exports.SubTransactionResponseFromJSONTyped = exports.SubTransactionResponseFromJSON = exports.instanceOfSubTransactionResponse = void 0;
const runtime_1 = require("../runtime");
const BaseContainerResponse_1 = require("./BaseContainerResponse");
const BaseUserResponse_1 = require("./BaseUserResponse");
const DineroObjectResponse_1 = require("./DineroObjectResponse");
const SubTransactionRowResponse_1 = require("./SubTransactionRowResponse");
/**
 * Check if a given object implements the SubTransactionResponse interface.
 */
function instanceOfSubTransactionResponse(value) {
    let isInstance = true;
    isInstance = isInstance && "to" in value;
    isInstance = isInstance && "container" in value;
    isInstance = isInstance && "subTransactionsRows" in value;
    isInstance = isInstance && "totalPriceInclVat" in value;
    isInstance = isInstance && "id" in value;
    return isInstance;
}
exports.instanceOfSubTransactionResponse = instanceOfSubTransactionResponse;
function SubTransactionResponseFromJSON(json) {
    return SubTransactionResponseFromJSONTyped(json, false);
}
exports.SubTransactionResponseFromJSON = SubTransactionResponseFromJSON;
function SubTransactionResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'to': (0, BaseUserResponse_1.BaseUserResponseFromJSON)(json['to']),
        'container': (0, BaseContainerResponse_1.BaseContainerResponseFromJSON)(json['container']),
        'subTransactionsRows': (json['subTransactionsRows'].map(SubTransactionRowResponse_1.SubTransactionRowResponseFromJSON)),
        'totalPriceInclVat': (0, DineroObjectResponse_1.DineroObjectResponseFromJSON)(json['totalPriceInclVat']),
        'id': json['id'],
        'createdAt': !(0, runtime_1.exists)(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !(0, runtime_1.exists)(json, 'updatedAt') ? undefined : json['updatedAt'],
        'version': !(0, runtime_1.exists)(json, 'version') ? undefined : json['version'],
    };
}
exports.SubTransactionResponseFromJSONTyped = SubTransactionResponseFromJSONTyped;
function SubTransactionResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'to': (0, BaseUserResponse_1.BaseUserResponseToJSON)(value.to),
        'container': (0, BaseContainerResponse_1.BaseContainerResponseToJSON)(value.container),
        'subTransactionsRows': (value.subTransactionsRows.map(SubTransactionRowResponse_1.SubTransactionRowResponseToJSON)),
        'totalPriceInclVat': (0, DineroObjectResponse_1.DineroObjectResponseToJSON)(value.totalPriceInclVat),
        'id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'version': value.version,
    };
}
exports.SubTransactionResponseToJSON = SubTransactionResponseToJSON;
//# sourceMappingURL=SubTransactionResponse.js.map