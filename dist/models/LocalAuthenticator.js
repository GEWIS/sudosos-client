"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * Back-end API and database management for SudoSOS.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalAuthenticatorToJSON = exports.LocalAuthenticatorFromJSONTyped = exports.LocalAuthenticatorFromJSON = exports.instanceOfLocalAuthenticator = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the LocalAuthenticator interface.
 */
function instanceOfLocalAuthenticator(value) {
    let isInstance = true;
    isInstance = isInstance && "hash" in value;
    return isInstance;
}
exports.instanceOfLocalAuthenticator = instanceOfLocalAuthenticator;
function LocalAuthenticatorFromJSON(json) {
    return LocalAuthenticatorFromJSONTyped(json, false);
}
exports.LocalAuthenticatorFromJSON = LocalAuthenticatorFromJSON;
function LocalAuthenticatorFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hash': json['hash'],
        'createdAt': !(0, runtime_1.exists)(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !(0, runtime_1.exists)(json, 'updatedAt') ? undefined : json['updatedAt'],
        'version': !(0, runtime_1.exists)(json, 'version') ? undefined : json['version'],
    };
}
exports.LocalAuthenticatorFromJSONTyped = LocalAuthenticatorFromJSONTyped;
function LocalAuthenticatorToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hash': value.hash,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'version': value.version,
    };
}
exports.LocalAuthenticatorToJSON = LocalAuthenticatorToJSON;
//# sourceMappingURL=LocalAuthenticator.js.map