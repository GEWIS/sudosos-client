"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvoicesApi = void 0;
const runtime = require("../runtime");
const models_1 = require("../models");
/**
 *
 */
class InvoicesApi extends runtime.BaseAPI {
    /**
     *  Adds an invoice to the system.
     */
    createInvoiceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.invoice === null || requestParameters.invoice === undefined) {
                throw new runtime.RequiredError('invoice', 'Required parameter requestParameters.invoice was null or undefined when calling createInvoice.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // JWT authentication
            }
            const response = yield this.request({
                path: `/invoices`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, models_1.CreateInvoiceRequestToJSON)(requestParameters.invoice),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.InvoiceResponseFromJSON)(jsonValue));
        });
    }
    /**
     *  Adds an invoice to the system.
     */
    createInvoice(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createInvoiceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     *  Deletes an invoice.
     */
    deleteInvoiceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.id === null || requestParameters.id === undefined) {
                throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling deleteInvoice.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // JWT authentication
            }
            const response = yield this.request({
                path: `/invoices/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.BaseInvoiceResponseFromJSON)(jsonValue));
        });
    }
    /**
     *  Deletes an invoice.
     */
    deleteInvoice(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteInvoiceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     *  Returns all invoices in the system.
     */
    getAllInvoicesRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters.toId !== undefined) {
                queryParameters['toId'] = requestParameters.toId;
            }
            if (requestParameters.invoiceId !== undefined) {
                queryParameters['invoiceId'] = requestParameters.invoiceId;
            }
            if (requestParameters.state !== undefined) {
                queryParameters['state'] = requestParameters.state;
            }
            if (requestParameters.returnEntries !== undefined) {
                queryParameters['returnEntries'] = requestParameters.returnEntries;
            }
            if (requestParameters.fromDate !== undefined) {
                queryParameters['fromDate'] = requestParameters.fromDate;
            }
            if (requestParameters.tillDate !== undefined) {
                queryParameters['tillDate'] = requestParameters.tillDate;
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // JWT authentication
            }
            const response = yield this.request({
                path: `/invoices`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.PaginatedInvoiceResponseFromJSON)(jsonValue));
        });
    }
    /**
     *  Returns all invoices in the system.
     */
    getAllInvoices(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getAllInvoicesRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     *  Returns a single invoice in the system.
     */
    getSingleInvoiceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.id === null || requestParameters.id === undefined) {
                throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling getSingleInvoice.');
            }
            const queryParameters = {};
            if (requestParameters.returnEntries !== undefined) {
                queryParameters['returnEntries'] = requestParameters.returnEntries;
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // JWT authentication
            }
            const response = yield this.request({
                path: `/invoices/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.InvoiceResponseFromJSON)(jsonValue));
        });
    }
    /**
     *  Returns a single invoice in the system.
     */
    getSingleInvoice(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getSingleInvoiceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     *  Adds an invoice to the system.
     */
    updateInvoiceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.id === null || requestParameters.id === undefined) {
                throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling updateInvoice.');
            }
            if (requestParameters.invoice === null || requestParameters.invoice === undefined) {
                throw new runtime.RequiredError('invoice', 'Required parameter requestParameters.invoice was null or undefined when calling updateInvoice.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // JWT authentication
            }
            const response = yield this.request({
                path: `/invoices/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
                method: 'PATCH',
                headers: headerParameters,
                query: queryParameters,
                body: (0, models_1.UpdateInvoiceRequestToJSON)(requestParameters.invoice),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.BaseInvoiceResponseFromJSON)(jsonValue));
        });
    }
    /**
     *  Adds an invoice to the system.
     */
    updateInvoice(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.updateInvoiceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
exports.InvoicesApi = InvoicesApi;
//# sourceMappingURL=InvoicesApi.js.map