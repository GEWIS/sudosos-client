/**
 * sudosos-back-end
 * Back-end API and database management for SudoSOS.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CreateProductRequest, PaginatedProductResponse, ProductResponse, UpdateProductRequest, UpdatedProductResponse } from '../models';
export interface CreateProductOperationRequest {
    product: CreateProductRequest;
}
export interface GetAllProductsRequest {
    take?: number;
    skip?: number;
}
export interface GetSingleProductRequest {
    id: number;
}
export interface GetUpdateProductRequest {
    id: number;
}
export interface GetUpdatedProductsRequest {
    take?: number;
    skip?: number;
}
export interface ProductsIdApprovePostRequest {
    id: number;
}
export interface UpdateProductOperationRequest {
    id: number;
    product: UpdateProductRequest;
}
export interface UpdateProductImageRequest {
    id: number;
    file?: Blob;
}
/**
 *
 */
export declare class ProductsApi extends runtime.BaseAPI {
    /**
     *  Create a new product.
     */
    createProductRaw(requestParameters: CreateProductOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdatedProductResponse>>;
    /**
     *  Create a new product.
     */
    createProduct(requestParameters: CreateProductOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdatedProductResponse>;
    /**
     *  Returns all existing products
     */
    getAllProductsRaw(requestParameters: GetAllProductsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedProductResponse>>;
    /**
     *  Returns all existing products
     */
    getAllProducts(requestParameters?: GetAllProductsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedProductResponse>;
    /**
     *  Returns the requested product
     */
    getSingleProductRaw(requestParameters: GetSingleProductRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductResponse>>;
    /**
     *  Returns the requested product
     */
    getSingleProduct(requestParameters: GetSingleProductRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductResponse>;
    /**
     *  Returns the requested updated product
     */
    getUpdateProductRaw(requestParameters: GetUpdateProductRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductResponse>>;
    /**
     *  Returns the requested updated product
     */
    getUpdateProduct(requestParameters: GetUpdateProductRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductResponse>;
    /**
     *  Returns all updated products
     */
    getUpdatedProductsRaw(requestParameters: GetUpdatedProductsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedProductResponse>>;
    /**
     *  Returns all updated products
     */
    getUpdatedProducts(requestParameters?: GetUpdatedProductsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedProductResponse>;
    /**
     *  Approve a product update.
     */
    productsIdApprovePostRaw(requestParameters: ProductsIdApprovePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductResponse>>;
    /**
     *  Approve a product update.
     */
    productsIdApprovePost(requestParameters: ProductsIdApprovePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductResponse>;
    /**
     *  Update an existing product.
     */
    updateProductRaw(requestParameters: UpdateProductOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductResponse>>;
    /**
     *  Update an existing product.
     */
    updateProduct(requestParameters: UpdateProductOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductResponse>;
    /**
     *  Upload a new image for a product
     */
    updateProductImageRaw(requestParameters: UpdateProductImageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     *  Upload a new image for a product
     */
    updateProductImage(requestParameters: UpdateProductImageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
