/**
 * sudosos-back-end
 * Back-end API and database management for SudoSOS.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ContainerWithProductsResponse, CreateContainerRequest, PaginatedContainerResponse, PaginatedProductResponse, UpdateContainerRequest } from '../models';
export interface ContainersIdApprovePostRequest {
    id: number;
}
export interface CreateContainerOperationRequest {
    container: CreateContainerRequest;
}
export interface GetAllContainersRequest {
    take?: number;
    skip?: number;
}
export interface GetProductsContainerRequest {
    id: number;
    take?: number;
    skip?: number;
}
export interface GetPublicContainersRequest {
    take?: number;
    skip?: number;
}
export interface GetSingleContainerRequest {
    id: number;
}
export interface GetSingleUpdatedContainerRequest {
    id: number;
}
export interface GetUpdatedContainersRequest {
    take?: number;
    skip?: number;
}
export interface UpdateContainerOperationRequest {
    id: number;
    container: UpdateContainerRequest;
}
/**
 *
 */
export declare class ContainersApi extends runtime.BaseAPI {
    /**
     *  Approve a container update.
     */
    containersIdApprovePostRaw(requestParameters: ContainersIdApprovePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContainerWithProductsResponse>>;
    /**
     *  Approve a container update.
     */
    containersIdApprovePost(requestParameters: ContainersIdApprovePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContainerWithProductsResponse>;
    /**
     *  Create a new container.
     */
    createContainerRaw(requestParameters: CreateContainerOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContainerWithProductsResponse>>;
    /**
     *  Create a new container.
     */
    createContainer(requestParameters: CreateContainerOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContainerWithProductsResponse>;
    /**
     *  Returns all existing containers
     */
    getAllContainersRaw(requestParameters: GetAllContainersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedContainerResponse>>;
    /**
     *  Returns all existing containers
     */
    getAllContainers(requestParameters?: GetAllContainersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedContainerResponse>;
    /**
     *  Returns all the products in the container
     */
    getProductsContainerRaw(requestParameters: GetProductsContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedProductResponse>>;
    /**
     *  Returns all the products in the container
     */
    getProductsContainer(requestParameters: GetProductsContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedProductResponse>;
    /**
     *  Returns all public container
     */
    getPublicContainersRaw(requestParameters: GetPublicContainersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedContainerResponse>>;
    /**
     *  Returns all public container
     */
    getPublicContainers(requestParameters?: GetPublicContainersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedContainerResponse>;
    /**
     *  Returns the requested container
     */
    getSingleContainerRaw(requestParameters: GetSingleContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContainerWithProductsResponse>>;
    /**
     *  Returns the requested container
     */
    getSingleContainer(requestParameters: GetSingleContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContainerWithProductsResponse>;
    /**
     *  Returns the requested updated container
     */
    getSingleUpdatedContainerRaw(requestParameters: GetSingleUpdatedContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContainerWithProductsResponse>>;
    /**
     *  Returns the requested updated container
     */
    getSingleUpdatedContainer(requestParameters: GetSingleUpdatedContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContainerWithProductsResponse>;
    /**
     *  Returns all updated containers
     */
    getUpdatedContainersRaw(requestParameters: GetUpdatedContainersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedContainerResponse>>;
    /**
     *  Returns all updated containers
     */
    getUpdatedContainers(requestParameters?: GetUpdatedContainersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedContainerResponse>;
    /**
     *  Update an existing container.
     */
    updateContainerRaw(requestParameters: UpdateContainerOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContainerWithProductsResponse>>;
    /**
     *  Update an existing container.
     */
    updateContainer(requestParameters: UpdateContainerOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContainerWithProductsResponse>;
}
