/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  StripePaymentIntentResponse,
  StripeRequest,
} from '../models';
import {
    StripePaymentIntentResponseFromJSON,
    StripePaymentIntentResponseToJSON,
    StripeRequestFromJSON,
    StripeRequestToJSON,
} from '../models';

export interface DepositRequest {
    stripe: StripeRequest;
}

/**
 * 
 */
export class StripeApi extends runtime.BaseAPI {

    /**
     *  Start the stripe deposit flow
     */
    async depositRaw(requestParameters: DepositRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StripePaymentIntentResponse>> {
        if (requestParameters.stripe === null || requestParameters.stripe === undefined) {
            throw new runtime.RequiredError('stripe','Required parameter requestParameters.stripe was null or undefined when calling deposit.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // JWT authentication
        }

        const response = await this.request({
            path: `/stripe/deposit`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: StripeRequestToJSON(requestParameters.stripe),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StripePaymentIntentResponseFromJSON(jsonValue));
    }

    /**
     *  Start the stripe deposit flow
     */
    async deposit(requestParameters: DepositRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StripePaymentIntentResponse> {
        const response = await this.depositRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     *  Webhook for Stripe event updates
     */
    async webhookRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/stripe/webhook`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     *  Webhook for Stripe event updates
     */
    async webhook(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.webhookRaw(initOverrides);
    }

}
