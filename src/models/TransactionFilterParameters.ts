/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransactionFilterParameters
 */
export interface TransactionFilterParameters {
    /**
     * 
     * @type {Array<number>}
     * @memberof TransactionFilterParameters
     */
    transactionId?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof TransactionFilterParameters
     */
    fromId?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionFilterParameters
     */
    createdById?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionFilterParameters
     */
    toId?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionFilterParameters
     */
    pointOfSaleId?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionFilterParameters
     */
    pointOfSaleRevision?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionFilterParameters
     */
    containerId?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionFilterParameters
     */
    containerRevision?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionFilterParameters
     */
    productId?: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionFilterParameters
     */
    productRevision?: number;
    /**
     * 
     * @type {string}
     * @memberof TransactionFilterParameters
     */
    fromDate?: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionFilterParameters
     */
    tillDate?: string;
    /**
     * 
     * @type {number}
     * @memberof TransactionFilterParameters
     */
    invoiceId?: number;
}

/**
 * Check if a given object implements the TransactionFilterParameters interface.
 */
export function instanceOfTransactionFilterParameters(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransactionFilterParametersFromJSON(json: any): TransactionFilterParameters {
    return TransactionFilterParametersFromJSONTyped(json, false);
}

export function TransactionFilterParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionFilterParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transactionId': !exists(json, 'transactionId') ? undefined : json['transactionId'],
        'fromId': !exists(json, 'fromId') ? undefined : json['fromId'],
        'createdById': !exists(json, 'createdById') ? undefined : json['createdById'],
        'toId': !exists(json, 'toId') ? undefined : json['toId'],
        'pointOfSaleId': !exists(json, 'pointOfSaleId') ? undefined : json['pointOfSaleId'],
        'pointOfSaleRevision': !exists(json, 'pointOfSaleRevision') ? undefined : json['pointOfSaleRevision'],
        'containerId': !exists(json, 'containerId') ? undefined : json['containerId'],
        'containerRevision': !exists(json, 'containerRevision') ? undefined : json['containerRevision'],
        'productId': !exists(json, 'productId') ? undefined : json['productId'],
        'productRevision': !exists(json, 'productRevision') ? undefined : json['productRevision'],
        'fromDate': !exists(json, 'fromDate') ? undefined : json['fromDate'],
        'tillDate': !exists(json, 'tillDate') ? undefined : json['tillDate'],
        'invoiceId': !exists(json, 'invoiceId') ? undefined : json['invoiceId'],
    };
}

export function TransactionFilterParametersToJSON(value?: TransactionFilterParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transactionId': value.transactionId,
        'fromId': value.fromId,
        'createdById': value.createdById,
        'toId': value.toId,
        'pointOfSaleId': value.pointOfSaleId,
        'pointOfSaleRevision': value.pointOfSaleRevision,
        'containerId': value.containerId,
        'containerRevision': value.containerRevision,
        'productId': value.productId,
        'productRevision': value.productRevision,
        'fromDate': value.fromDate,
        'tillDate': value.tillDate,
        'invoiceId': value.invoiceId,
    };
}

