/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VatDeclarationRow } from './VatDeclarationRow';
import {
    VatDeclarationRowFromJSON,
    VatDeclarationRowFromJSONTyped,
    VatDeclarationRowToJSON,
} from './VatDeclarationRow';

/**
 * 
 * @export
 * @interface VatDeclarationResponse
 */
export interface VatDeclarationResponse {
    /**
     * Calendar year of this result table
     * @type {number}
     * @memberof VatDeclarationResponse
     */
    calendarYear?: number;
    /**
     * The used VAT declaration period the rows below are based upon
     * @type {string}
     * @memberof VatDeclarationResponse
     */
    period?: string;
    /**
     * 
     * @type {Array<VatDeclarationRow>}
     * @memberof VatDeclarationResponse
     */
    rows?: Array<VatDeclarationRow>;
}

/**
 * Check if a given object implements the VatDeclarationResponse interface.
 */
export function instanceOfVatDeclarationResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VatDeclarationResponseFromJSON(json: any): VatDeclarationResponse {
    return VatDeclarationResponseFromJSONTyped(json, false);
}

export function VatDeclarationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): VatDeclarationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'calendarYear': !exists(json, 'calendarYear') ? undefined : json['calendarYear'],
        'period': !exists(json, 'period') ? undefined : json['period'],
        'rows': !exists(json, 'rows') ? undefined : ((json['rows'] as Array<any>).map(VatDeclarationRowFromJSON)),
    };
}

export function VatDeclarationResponseToJSON(value?: VatDeclarationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'calendarYear': value.calendarYear,
        'period': value.period,
        'rows': value.rows === undefined ? undefined : ((value.rows as Array<any>).map(VatDeclarationRowToJSON)),
    };
}

