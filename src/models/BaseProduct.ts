/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Dinero } from './Dinero';
import {
    DineroFromJSON,
    DineroFromJSONTyped,
    DineroToJSON,
} from './Dinero';

/**
 * 
 * @export
 * @interface BaseProduct
 */
export interface BaseProduct {
    /**
     * The unique name of the product.
     * @type {string}
     * @memberof BaseProduct
     */
    name: string;
    /**
     * 
     * @type {Dinero}
     * @memberof BaseProduct
     */
    price: Dinero;
    /**
     * The creation date of the object.
     * @type {string}
     * @memberof BaseProduct
     */
    createdAt?: string;
    /**
     * The last update date of the object.
     * @type {string}
     * @memberof BaseProduct
     */
    updatedAt?: string;
    /**
     * The current version of the object.
     * @type {number}
     * @memberof BaseProduct
     */
    version?: number;
}

/**
 * Check if a given object implements the BaseProduct interface.
 */
export function instanceOfBaseProduct(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "price" in value;

    return isInstance;
}

export function BaseProductFromJSON(json: any): BaseProduct {
    return BaseProductFromJSONTyped(json, false);
}

export function BaseProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseProduct {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'price': DineroFromJSON(json['price']),
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}

export function BaseProductToJSON(value?: BaseProduct | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'price': DineroToJSON(value.price),
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'version': value.version,
    };
}

