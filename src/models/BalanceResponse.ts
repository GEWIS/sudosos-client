/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DineroObjectResponse } from './DineroObjectResponse';
import {
    DineroObjectResponseFromJSON,
    DineroObjectResponseFromJSONTyped,
    DineroObjectResponseToJSON,
} from './DineroObjectResponse';

/**
 * 
 * @export
 * @interface BalanceResponse
 */
export interface BalanceResponse {
    /**
     * ID of the user this balance belongs to
     * @type {number}
     * @memberof BalanceResponse
     */
    id: number;
    /**
     * 
     * @type {DineroObjectResponse}
     * @memberof BalanceResponse
     */
    amount: DineroObjectResponse;
    /**
     * The ID of the last transaction that was
     * present when the balance was cached
     * @type {number}
     * @memberof BalanceResponse
     */
    lastTransactionId?: number;
    /**
     * The ID of the last transfer that was
     * present when the balance was cached
     * @type {number}
     * @memberof BalanceResponse
     */
    lastTransferId?: number;
}

/**
 * Check if a given object implements the BalanceResponse interface.
 */
export function instanceOfBalanceResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "amount" in value;

    return isInstance;
}

export function BalanceResponseFromJSON(json: any): BalanceResponse {
    return BalanceResponseFromJSONTyped(json, false);
}

export function BalanceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BalanceResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'amount': DineroObjectResponseFromJSON(json['amount']),
        'lastTransactionId': !exists(json, 'lastTransactionId') ? undefined : json['lastTransactionId'],
        'lastTransferId': !exists(json, 'lastTransferId') ? undefined : json['lastTransferId'],
    };
}

export function BalanceResponseToJSON(value?: BalanceResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'amount': DineroObjectResponseToJSON(value.amount),
        'lastTransactionId': value.lastTransactionId,
        'lastTransferId': value.lastTransferId,
    };
}

