/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DineroObjectRequest } from './DineroObjectRequest';
import {
    DineroObjectRequestFromJSON,
    DineroObjectRequestFromJSONTyped,
    DineroObjectRequestToJSON,
} from './DineroObjectRequest';

/**
 * 
 * @export
 * @interface PayoutRequestRequest
 */
export interface PayoutRequestRequest {
    /**
     * 
     * @type {DineroObjectRequest}
     * @memberof PayoutRequestRequest
     */
    amount: DineroObjectRequest;
    /**
     * The bank account number to transfer the money to
     * @type {string}
     * @memberof PayoutRequestRequest
     */
    bankAccountNumber: string;
    /**
     * The name of the owner of the bank account
     * @type {string}
     * @memberof PayoutRequestRequest
     */
    bankAccountName: string;
}

/**
 * Check if a given object implements the PayoutRequestRequest interface.
 */
export function instanceOfPayoutRequestRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "bankAccountNumber" in value;
    isInstance = isInstance && "bankAccountName" in value;

    return isInstance;
}

export function PayoutRequestRequestFromJSON(json: any): PayoutRequestRequest {
    return PayoutRequestRequestFromJSONTyped(json, false);
}

export function PayoutRequestRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayoutRequestRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': DineroObjectRequestFromJSON(json['amount']),
        'bankAccountNumber': json['bankAccountNumber'],
        'bankAccountName': json['bankAccountName'],
    };
}

export function PayoutRequestRequestToJSON(value?: PayoutRequestRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': DineroObjectRequestToJSON(value.amount),
        'bankAccountNumber': value.bankAccountNumber,
        'bankAccountName': value.bankAccountName,
    };
}

