/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContainerRevision } from './ContainerRevision';
import {
    ContainerRevisionFromJSON,
    ContainerRevisionFromJSONTyped,
    ContainerRevisionToJSON,
} from './ContainerRevision';
import type { PointOfSale } from './PointOfSale';
import {
    PointOfSaleFromJSON,
    PointOfSaleFromJSONTyped,
    PointOfSaleToJSON,
} from './PointOfSale';

/**
 * 
 * @export
 * @interface PointOfSaleRevision
 */
export interface PointOfSaleRevision {
    /**
     * 
     * @type {PointOfSale}
     * @memberof PointOfSaleRevision
     */
    pointOfSale: PointOfSale;
    /**
     * The revision number of this revision.
     * @type {number}
     * @memberof PointOfSaleRevision
     */
    revision: number;
    /**
     * 
     * @type {Array<ContainerRevision>}
     * @memberof PointOfSaleRevision
     */
    containers: Array<ContainerRevision>;
    /**
     * The creation date of the object.
     * @type {string}
     * @memberof PointOfSaleRevision
     */
    createdAt?: string;
    /**
     * The last update date of the object.
     * @type {string}
     * @memberof PointOfSaleRevision
     */
    updatedAt?: string;
    /**
     * The current version of the object.
     * @type {number}
     * @memberof PointOfSaleRevision
     */
    version?: number;
}

/**
 * Check if a given object implements the PointOfSaleRevision interface.
 */
export function instanceOfPointOfSaleRevision(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pointOfSale" in value;
    isInstance = isInstance && "revision" in value;
    isInstance = isInstance && "containers" in value;

    return isInstance;
}

export function PointOfSaleRevisionFromJSON(json: any): PointOfSaleRevision {
    return PointOfSaleRevisionFromJSONTyped(json, false);
}

export function PointOfSaleRevisionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PointOfSaleRevision {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pointOfSale': PointOfSaleFromJSON(json['pointOfSale']),
        'revision': json['revision'],
        'containers': ((json['containers'] as Array<any>).map(ContainerRevisionFromJSON)),
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}

export function PointOfSaleRevisionToJSON(value?: PointOfSaleRevision | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pointOfSale': PointOfSaleToJSON(value.pointOfSale),
        'revision': value.revision,
        'containers': ((value.containers as Array<any>).map(ContainerRevisionToJSON)),
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'version': value.version,
    };
}

