/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InvoiceEntryRequest } from './InvoiceEntryRequest';
import {
    InvoiceEntryRequestFromJSON,
    InvoiceEntryRequestFromJSONTyped,
    InvoiceEntryRequestToJSON,
} from './InvoiceEntryRequest';

/**
 * 
 * @export
 * @interface CreateInvoiceRequest
 */
export interface CreateInvoiceRequest {
    /**
     * The recipient of the Invoice.
     * @type {number}
     * @memberof CreateInvoiceRequest
     */
    forId: number;
    /**
     * The creator of the Invoice, defaults to the ID of the requester.
     * @type {number}
     * @memberof CreateInvoiceRequest
     */
    byId?: number;
    /**
     * Name of the addressed.
     * @type {string}
     * @memberof CreateInvoiceRequest
     */
    addressee: string;
    /**
     * The description of the invoice.
     * @type {string}
     * @memberof CreateInvoiceRequest
     */
    description: string;
    /**
     * 
     * @type {Array<InvoiceEntryRequest>}
     * @memberof CreateInvoiceRequest
     */
    customEntries?: Array<InvoiceEntryRequest>;
    /**
     * 
     * @type {Array<number>}
     * @memberof CreateInvoiceRequest
     */
    transactionIDs?: Array<number>;
    /**
     * For creating an Invoice for all transactions from a specific date.
     * @type {string}
     * @memberof CreateInvoiceRequest
     */
    fromDate?: string;
    /**
     * If the invoice is an credit Invoice
     * @type {boolean}
     * @memberof CreateInvoiceRequest
     */
    isCreditInvoice: boolean;
}

/**
 * Check if a given object implements the CreateInvoiceRequest interface.
 */
export function instanceOfCreateInvoiceRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "forId" in value;
    isInstance = isInstance && "addressee" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "isCreditInvoice" in value;

    return isInstance;
}

export function CreateInvoiceRequestFromJSON(json: any): CreateInvoiceRequest {
    return CreateInvoiceRequestFromJSONTyped(json, false);
}

export function CreateInvoiceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateInvoiceRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'forId': json['forId'],
        'byId': !exists(json, 'byId') ? undefined : json['byId'],
        'addressee': json['addressee'],
        'description': json['description'],
        'customEntries': !exists(json, 'customEntries') ? undefined : ((json['customEntries'] as Array<any>).map(InvoiceEntryRequestFromJSON)),
        'transactionIDs': !exists(json, 'transactionIDs') ? undefined : json['transactionIDs'],
        'fromDate': !exists(json, 'fromDate') ? undefined : json['fromDate'],
        'isCreditInvoice': json['isCreditInvoice'],
    };
}

export function CreateInvoiceRequestToJSON(value?: CreateInvoiceRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'forId': value.forId,
        'byId': value.byId,
        'addressee': value.addressee,
        'description': value.description,
        'customEntries': value.customEntries === undefined ? undefined : ((value.customEntries as Array<any>).map(InvoiceEntryRequestToJSON)),
        'transactionIDs': value.transactionIDs,
        'fromDate': value.fromDate,
        'isCreditInvoice': value.isCreditInvoice,
    };
}

