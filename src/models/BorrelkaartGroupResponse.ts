/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DineroObjectRequest } from './DineroObjectRequest';
import {
    DineroObjectRequestFromJSON,
    DineroObjectRequestFromJSONTyped,
    DineroObjectRequestToJSON,
} from './DineroObjectRequest';
import type { UserResponse } from './UserResponse';
import {
    UserResponseFromJSON,
    UserResponseFromJSONTyped,
    UserResponseToJSON,
} from './UserResponse';

/**
 * 
 * @export
 * @interface BorrelkaartGroupResponse
 */
export interface BorrelkaartGroupResponse {
    /**
     * Name of the borrelkaart group
     * @type {string}
     * @memberof BorrelkaartGroupResponse
     */
    name: string;
    /**
     * Start date of the borrelkaart group
     * @type {string}
     * @memberof BorrelkaartGroupResponse
     */
    activeStartDate?: string;
    /**
     * End date of the borrelkaart group
     * @type {string}
     * @memberof BorrelkaartGroupResponse
     */
    activeEndDate: string;
    /**
     * 
     * @type {Array<UserResponse>}
     * @memberof BorrelkaartGroupResponse
     */
    users: Array<UserResponse>;
    /**
     * 
     * @type {DineroObjectRequest}
     * @memberof BorrelkaartGroupResponse
     */
    balance: DineroObjectRequest;
    /**
     * Amount of users to be assigned to the borrelkaart group
     * @type {number}
     * @memberof BorrelkaartGroupResponse
     */
    amount: number;
    /**
     * The unique id of the entity.
     * @type {number}
     * @memberof BorrelkaartGroupResponse
     */
    id: number;
    /**
     * The creation Date of the entity.
     * @type {string}
     * @memberof BorrelkaartGroupResponse
     */
    createdAt?: string;
    /**
     * The last update Date of the entity.
     * @type {string}
     * @memberof BorrelkaartGroupResponse
     */
    updatedAt?: string;
    /**
     * The version of the entity.
     * @type {number}
     * @memberof BorrelkaartGroupResponse
     */
    version?: number;
}

/**
 * Check if a given object implements the BorrelkaartGroupResponse interface.
 */
export function instanceOfBorrelkaartGroupResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "activeEndDate" in value;
    isInstance = isInstance && "users" in value;
    isInstance = isInstance && "balance" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function BorrelkaartGroupResponseFromJSON(json: any): BorrelkaartGroupResponse {
    return BorrelkaartGroupResponseFromJSONTyped(json, false);
}

export function BorrelkaartGroupResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BorrelkaartGroupResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'activeStartDate': !exists(json, 'activeStartDate') ? undefined : json['activeStartDate'],
        'activeEndDate': json['activeEndDate'],
        'users': ((json['users'] as Array<any>).map(UserResponseFromJSON)),
        'balance': DineroObjectRequestFromJSON(json['balance']),
        'amount': json['amount'],
        'id': json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}

export function BorrelkaartGroupResponseToJSON(value?: BorrelkaartGroupResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'activeStartDate': value.activeStartDate,
        'activeEndDate': value.activeEndDate,
        'users': ((value.users as Array<any>).map(UserResponseToJSON)),
        'balance': DineroObjectRequestToJSON(value.balance),
        'amount': value.amount,
        'id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'version': value.version,
    };
}

