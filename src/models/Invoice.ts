/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InvoiceEntry } from './InvoiceEntry';
import {
    InvoiceEntryFromJSON,
    InvoiceEntryFromJSONTyped,
    InvoiceEntryToJSON,
} from './InvoiceEntry';
import type { InvoiceStatus } from './InvoiceStatus';
import {
    InvoiceStatusFromJSON,
    InvoiceStatusFromJSONTyped,
    InvoiceStatusToJSON,
} from './InvoiceStatus';
import type { Transfer } from './Transfer';
import {
    TransferFromJSON,
    TransferFromJSONTyped,
    TransferToJSON,
} from './Transfer';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Invoice
 */
export interface Invoice {
    /**
     * 
     * @type {User}
     * @memberof Invoice
     */
    to: User;
    /**
     * 
     * @type {Transfer}
     * @memberof Invoice
     */
    transfer: Transfer;
    /**
     * 
     * @type {Array<InvoiceEntry>}
     * @memberof Invoice
     */
    invoiceEntries: Array<InvoiceEntry>;
    /**
     * 
     * @type {Array<InvoiceStatus>}
     * @memberof Invoice
     */
    invoiceStatus: Array<InvoiceStatus>;
    /**
     * Name of the addressed
     * @type {string}
     * @memberof Invoice
     */
    addressee: string;
    /**
     * The description of the invoice
     * @type {string}
     * @memberof Invoice
     */
    description: string;
    /**
     * The creation date of the object.
     * @type {string}
     * @memberof Invoice
     */
    createdAt?: string;
    /**
     * The last update date of the object.
     * @type {string}
     * @memberof Invoice
     */
    updatedAt?: string;
    /**
     * The current version of the object.
     * @type {number}
     * @memberof Invoice
     */
    version?: number;
}

/**
 * Check if a given object implements the Invoice interface.
 */
export function instanceOfInvoice(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "to" in value;
    isInstance = isInstance && "transfer" in value;
    isInstance = isInstance && "invoiceEntries" in value;
    isInstance = isInstance && "invoiceStatus" in value;
    isInstance = isInstance && "addressee" in value;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function InvoiceFromJSON(json: any): Invoice {
    return InvoiceFromJSONTyped(json, false);
}

export function InvoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Invoice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'to': UserFromJSON(json['to']),
        'transfer': TransferFromJSON(json['transfer']),
        'invoiceEntries': ((json['invoiceEntries'] as Array<any>).map(InvoiceEntryFromJSON)),
        'invoiceStatus': ((json['invoiceStatus'] as Array<any>).map(InvoiceStatusFromJSON)),
        'addressee': json['addressee'],
        'description': json['description'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}

export function InvoiceToJSON(value?: Invoice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'to': UserToJSON(value.to),
        'transfer': TransferToJSON(value.transfer),
        'invoiceEntries': ((value.invoiceEntries as Array<any>).map(InvoiceEntryToJSON)),
        'invoiceStatus': ((value.invoiceStatus as Array<any>).map(InvoiceStatusToJSON)),
        'addressee': value.addressee,
        'description': value.description,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'version': value.version,
    };
}

