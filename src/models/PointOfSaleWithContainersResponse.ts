/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContainerWithProductsResponse } from './ContainerWithProductsResponse';
import {
    ContainerWithProductsResponseFromJSON,
    ContainerWithProductsResponseFromJSONTyped,
    ContainerWithProductsResponseToJSON,
} from './ContainerWithProductsResponse';

/**
 * 
 * @export
 * @interface PointOfSaleWithContainersResponse
 */
export interface PointOfSaleWithContainersResponse {
    /**
     * 
     * @type {Array<ContainerWithProductsResponse>}
     * @memberof PointOfSaleWithContainersResponse
     */
    containers: Array<ContainerWithProductsResponse>;
    /**
     * The unique id of the entity.
     * @type {number}
     * @memberof PointOfSaleWithContainersResponse
     */
    id: number;
    /**
     * The creation Date of the entity.
     * @type {string}
     * @memberof PointOfSaleWithContainersResponse
     */
    createdAt?: string;
    /**
     * The last update Date of the entity.
     * @type {string}
     * @memberof PointOfSaleWithContainersResponse
     */
    updatedAt?: string;
    /**
     * The version of the entity.
     * @type {number}
     * @memberof PointOfSaleWithContainersResponse
     */
    version?: number;
}

/**
 * Check if a given object implements the PointOfSaleWithContainersResponse interface.
 */
export function instanceOfPointOfSaleWithContainersResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "containers" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function PointOfSaleWithContainersResponseFromJSON(json: any): PointOfSaleWithContainersResponse {
    return PointOfSaleWithContainersResponseFromJSONTyped(json, false);
}

export function PointOfSaleWithContainersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PointOfSaleWithContainersResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'containers': ((json['containers'] as Array<any>).map(ContainerWithProductsResponseFromJSON)),
        'id': json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}

export function PointOfSaleWithContainersResponseToJSON(value?: PointOfSaleWithContainersResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'containers': ((value.containers as Array<any>).map(ContainerWithProductsResponseToJSON)),
        'id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'version': value.version,
    };
}

