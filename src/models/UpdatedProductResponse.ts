/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BaseUserResponse } from './BaseUserResponse';
import {
    BaseUserResponseFromJSON,
    BaseUserResponseFromJSONTyped,
    BaseUserResponseToJSON,
} from './BaseUserResponse';
import type { DineroObjectResponse } from './DineroObjectResponse';
import {
    DineroObjectResponseFromJSON,
    DineroObjectResponseFromJSONTyped,
    DineroObjectResponseToJSON,
} from './DineroObjectResponse';
import type { ProductCategoryResponse } from './ProductCategoryResponse';
import {
    ProductCategoryResponseFromJSON,
    ProductCategoryResponseFromJSONTyped,
    ProductCategoryResponseToJSON,
} from './ProductCategoryResponse';

/**
 * 
 * @export
 * @interface UpdatedProductResponse
 */
export interface UpdatedProductResponse {
    /**
     * The revision of the product.
     * @type {number}
     * @memberof UpdatedProductResponse
     */
    revision?: number;
    /**
     * 
     * @type {BaseUserResponse}
     * @memberof UpdatedProductResponse
     */
    owner: BaseUserResponse;
    /**
     * 
     * @type {ProductCategoryResponse}
     * @memberof UpdatedProductResponse
     */
    category: ProductCategoryResponse;
    /**
     * 
     * @type {DineroObjectResponse}
     * @memberof UpdatedProductResponse
     */
    priceExclVat: DineroObjectResponse;
    /**
     * The URL to the picture representing this product.
     * @type {string}
     * @memberof UpdatedProductResponse
     */
    image?: string;
    /**
     * The percentage of alcohol in this product.
     * @type {number}
     * @memberof UpdatedProductResponse
     */
    alcoholPercentage?: number;
    /**
     * The unique id of the entity.
     * @type {number}
     * @memberof UpdatedProductResponse
     */
    id: number;
    /**
     * The creation Date of the entity.
     * @type {string}
     * @memberof UpdatedProductResponse
     */
    createdAt?: string;
    /**
     * The last update Date of the entity.
     * @type {string}
     * @memberof UpdatedProductResponse
     */
    updatedAt?: string;
    /**
     * The version of the entity.
     * @type {number}
     * @memberof UpdatedProductResponse
     */
    version?: number;
}

/**
 * Check if a given object implements the UpdatedProductResponse interface.
 */
export function instanceOfUpdatedProductResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "owner" in value;
    isInstance = isInstance && "category" in value;
    isInstance = isInstance && "priceExclVat" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function UpdatedProductResponseFromJSON(json: any): UpdatedProductResponse {
    return UpdatedProductResponseFromJSONTyped(json, false);
}

export function UpdatedProductResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatedProductResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'revision': !exists(json, 'revision') ? undefined : json['revision'],
        'owner': BaseUserResponseFromJSON(json['owner']),
        'category': ProductCategoryResponseFromJSON(json['category']),
        'priceExclVat': DineroObjectResponseFromJSON(json['priceExclVat']),
        'image': !exists(json, 'image') ? undefined : json['image'],
        'alcoholPercentage': !exists(json, 'alcoholPercentage') ? undefined : json['alcoholPercentage'],
        'id': json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}

export function UpdatedProductResponseToJSON(value?: UpdatedProductResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'revision': value.revision,
        'owner': BaseUserResponseToJSON(value.owner),
        'category': ProductCategoryResponseToJSON(value.category),
        'priceExclVat': DineroObjectResponseToJSON(value.priceExclVat),
        'image': value.image,
        'alcoholPercentage': value.alcoholPercentage,
        'id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'version': value.version,
    };
}

