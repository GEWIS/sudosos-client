/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DineroObjectRequest } from './DineroObjectRequest';
import {
    DineroObjectRequestFromJSON,
    DineroObjectRequestFromJSONTyped,
    DineroObjectRequestToJSON,
} from './DineroObjectRequest';
import type { RevisionRequest } from './RevisionRequest';
import {
    RevisionRequestFromJSON,
    RevisionRequestFromJSONTyped,
    RevisionRequestToJSON,
} from './RevisionRequest';
import type { SubTransactionRequest } from './SubTransactionRequest';
import {
    SubTransactionRequestFromJSON,
    SubTransactionRequestFromJSONTyped,
    SubTransactionRequestToJSON,
} from './SubTransactionRequest';

/**
 * 
 * @export
 * @interface TransactionRequest
 */
export interface TransactionRequest {
    /**
     * from user id
     * @type {number}
     * @memberof TransactionRequest
     */
    from: number;
    /**
     * createdBy user id
     * @type {number}
     * @memberof TransactionRequest
     */
    createdBy?: number;
    /**
     * 
     * @type {Array<SubTransactionRequest>}
     * @memberof TransactionRequest
     */
    subTransactions: Array<SubTransactionRequest>;
    /**
     * 
     * @type {RevisionRequest}
     * @memberof TransactionRequest
     */
    pointOfSale: RevisionRequest;
    /**
     * 
     * @type {DineroObjectRequest}
     * @memberof TransactionRequest
     */
    totalPriceInclVat: DineroObjectRequest;
}

/**
 * Check if a given object implements the TransactionRequest interface.
 */
export function instanceOfTransactionRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "from" in value;
    isInstance = isInstance && "subTransactions" in value;
    isInstance = isInstance && "pointOfSale" in value;
    isInstance = isInstance && "totalPriceInclVat" in value;

    return isInstance;
}

export function TransactionRequestFromJSON(json: any): TransactionRequest {
    return TransactionRequestFromJSONTyped(json, false);
}

export function TransactionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'from': json['from'],
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'subTransactions': ((json['subTransactions'] as Array<any>).map(SubTransactionRequestFromJSON)),
        'pointOfSale': RevisionRequestFromJSON(json['pointOfSale']),
        'totalPriceInclVat': DineroObjectRequestFromJSON(json['totalPriceInclVat']),
    };
}

export function TransactionRequestToJSON(value?: TransactionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'from': value.from,
        'createdBy': value.createdBy,
        'subTransactions': ((value.subTransactions as Array<any>).map(SubTransactionRequestToJSON)),
        'pointOfSale': RevisionRequestToJSON(value.pointOfSale),
        'totalPriceInclVat': DineroObjectRequestToJSON(value.totalPriceInclVat),
    };
}

