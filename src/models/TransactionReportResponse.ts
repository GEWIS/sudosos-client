/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DineroObjectResponse } from './DineroObjectResponse';
import {
    DineroObjectResponseFromJSON,
    DineroObjectResponseFromJSONTyped,
    DineroObjectResponseToJSON,
} from './DineroObjectResponse';
import type { TransactionFilterParameters } from './TransactionFilterParameters';
import {
    TransactionFilterParametersFromJSON,
    TransactionFilterParametersFromJSONTyped,
    TransactionFilterParametersToJSON,
} from './TransactionFilterParameters';
import type { TransactionReportDataResponse } from './TransactionReportDataResponse';
import {
    TransactionReportDataResponseFromJSON,
    TransactionReportDataResponseFromJSONTyped,
    TransactionReportDataResponseToJSON,
} from './TransactionReportDataResponse';

/**
 * 
 * @export
 * @interface TransactionReportResponse
 */
export interface TransactionReportResponse {
    /**
     * 
     * @type {TransactionFilterParameters}
     * @memberof TransactionReportResponse
     */
    parameters: TransactionFilterParameters;
    /**
     * 
     * @type {TransactionReportDataResponse}
     * @memberof TransactionReportResponse
     */
    data: TransactionReportDataResponse;
    /**
     * 
     * @type {DineroObjectResponse}
     * @memberof TransactionReportResponse
     */
    totalExclVat: DineroObjectResponse;
    /**
     * 
     * @type {DineroObjectResponse}
     * @memberof TransactionReportResponse
     */
    totalInclVat: DineroObjectResponse;
}

/**
 * Check if a given object implements the TransactionReportResponse interface.
 */
export function instanceOfTransactionReportResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "parameters" in value;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "totalExclVat" in value;
    isInstance = isInstance && "totalInclVat" in value;

    return isInstance;
}

export function TransactionReportResponseFromJSON(json: any): TransactionReportResponse {
    return TransactionReportResponseFromJSONTyped(json, false);
}

export function TransactionReportResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionReportResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'parameters': TransactionFilterParametersFromJSON(json['parameters']),
        'data': TransactionReportDataResponseFromJSON(json['data']),
        'totalExclVat': DineroObjectResponseFromJSON(json['totalExclVat']),
        'totalInclVat': DineroObjectResponseFromJSON(json['totalInclVat']),
    };
}

export function TransactionReportResponseToJSON(value?: TransactionReportResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'parameters': TransactionFilterParametersToJSON(value.parameters),
        'data': TransactionReportDataResponseToJSON(value.data),
        'totalExclVat': DineroObjectResponseToJSON(value.totalExclVat),
        'totalInclVat': DineroObjectResponseToJSON(value.totalInclVat),
    };
}

