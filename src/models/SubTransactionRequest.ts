/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DineroObjectRequest } from './DineroObjectRequest';
import {
    DineroObjectRequestFromJSON,
    DineroObjectRequestFromJSONTyped,
    DineroObjectRequestToJSON,
} from './DineroObjectRequest';
import type { RevisionRequest } from './RevisionRequest';
import {
    RevisionRequestFromJSON,
    RevisionRequestFromJSONTyped,
    RevisionRequestToJSON,
} from './RevisionRequest';
import type { SubTransactionRowRequest } from './SubTransactionRowRequest';
import {
    SubTransactionRowRequestFromJSON,
    SubTransactionRowRequestFromJSONTyped,
    SubTransactionRowRequestToJSON,
} from './SubTransactionRowRequest';

/**
 * 
 * @export
 * @interface SubTransactionRequest
 */
export interface SubTransactionRequest {
    /**
     * to user id
     * @type {number}
     * @memberof SubTransactionRequest
     */
    to: number;
    /**
     * 
     * @type {RevisionRequest}
     * @memberof SubTransactionRequest
     */
    container: RevisionRequest;
    /**
     * 
     * @type {Array<SubTransactionRowRequest>}
     * @memberof SubTransactionRequest
     */
    subTransactionRows: Array<SubTransactionRowRequest>;
    /**
     * 
     * @type {DineroObjectRequest}
     * @memberof SubTransactionRequest
     */
    totalPriceInclVat: DineroObjectRequest;
}

/**
 * Check if a given object implements the SubTransactionRequest interface.
 */
export function instanceOfSubTransactionRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "to" in value;
    isInstance = isInstance && "container" in value;
    isInstance = isInstance && "subTransactionRows" in value;
    isInstance = isInstance && "totalPriceInclVat" in value;

    return isInstance;
}

export function SubTransactionRequestFromJSON(json: any): SubTransactionRequest {
    return SubTransactionRequestFromJSONTyped(json, false);
}

export function SubTransactionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubTransactionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'to': json['to'],
        'container': RevisionRequestFromJSON(json['container']),
        'subTransactionRows': ((json['subTransactionRows'] as Array<any>).map(SubTransactionRowRequestFromJSON)),
        'totalPriceInclVat': DineroObjectRequestFromJSON(json['totalPriceInclVat']),
    };
}

export function SubTransactionRequestToJSON(value?: SubTransactionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'to': value.to,
        'container': RevisionRequestToJSON(value.container),
        'subTransactionRows': ((value.subTransactionRows as Array<any>).map(SubTransactionRowRequestToJSON)),
        'totalPriceInclVat': DineroObjectRequestToJSON(value.totalPriceInclVat),
    };
}

