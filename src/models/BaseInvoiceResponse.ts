/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BaseUserResponse } from './BaseUserResponse';
import {
    BaseUserResponseFromJSON,
    BaseUserResponseFromJSONTyped,
    BaseUserResponseToJSON,
} from './BaseUserResponse';
import type { InvoiceStatusResponse } from './InvoiceStatusResponse';
import {
    InvoiceStatusResponseFromJSON,
    InvoiceStatusResponseFromJSONTyped,
    InvoiceStatusResponseToJSON,
} from './InvoiceStatusResponse';
import type { TransferResponse } from './TransferResponse';
import {
    TransferResponseFromJSON,
    TransferResponseFromJSONTyped,
    TransferResponseToJSON,
} from './TransferResponse';

/**
 * 
 * @export
 * @interface BaseInvoiceResponse
 */
export interface BaseInvoiceResponse {
    /**
     * 
     * @type {BaseUserResponse}
     * @memberof BaseInvoiceResponse
     */
    to: BaseUserResponse;
    /**
     * Name of the addressed.
     * @type {string}
     * @memberof BaseInvoiceResponse
     */
    addressee: string;
    /**
     * Description of the invoice.
     * @type {string}
     * @memberof BaseInvoiceResponse
     */
    description: string;
    /**
     * 
     * @type {InvoiceStatusResponse}
     * @memberof BaseInvoiceResponse
     */
    currentState: InvoiceStatusResponse;
    /**
     * 
     * @type {TransferResponse}
     * @memberof BaseInvoiceResponse
     */
    transfer?: TransferResponse;
    /**
     * The unique id of the entity.
     * @type {number}
     * @memberof BaseInvoiceResponse
     */
    id: number;
    /**
     * The creation Date of the entity.
     * @type {string}
     * @memberof BaseInvoiceResponse
     */
    createdAt?: string;
    /**
     * The last update Date of the entity.
     * @type {string}
     * @memberof BaseInvoiceResponse
     */
    updatedAt?: string;
    /**
     * The version of the entity.
     * @type {number}
     * @memberof BaseInvoiceResponse
     */
    version?: number;
}

/**
 * Check if a given object implements the BaseInvoiceResponse interface.
 */
export function instanceOfBaseInvoiceResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "to" in value;
    isInstance = isInstance && "addressee" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "currentState" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function BaseInvoiceResponseFromJSON(json: any): BaseInvoiceResponse {
    return BaseInvoiceResponseFromJSONTyped(json, false);
}

export function BaseInvoiceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseInvoiceResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'to': BaseUserResponseFromJSON(json['to']),
        'addressee': json['addressee'],
        'description': json['description'],
        'currentState': InvoiceStatusResponseFromJSON(json['currentState']),
        'transfer': !exists(json, 'transfer') ? undefined : TransferResponseFromJSON(json['transfer']),
        'id': json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}

export function BaseInvoiceResponseToJSON(value?: BaseInvoiceResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'to': BaseUserResponseToJSON(value.to),
        'addressee': value.addressee,
        'description': value.description,
        'currentState': InvoiceStatusResponseToJSON(value.currentState),
        'transfer': TransferResponseToJSON(value.transfer),
        'id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'version': value.version,
    };
}

