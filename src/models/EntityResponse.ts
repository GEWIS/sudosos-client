/* tslint:disable */
/* eslint-disable */
/**
 * sudosos-back-end
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ActionResponse } from './ActionResponse';
import {
    ActionResponseFromJSON,
    ActionResponseFromJSONTyped,
    ActionResponseToJSON,
} from './ActionResponse';

/**
 * 
 * @export
 * @interface EntityResponse
 */
export interface EntityResponse {
    /**
     * The name of the entity for which the permissions are.
     * @type {string}
     * @memberof EntityResponse
     */
    entity?: string;
    /**
     * 
     * @type {Array<ActionResponse>}
     * @memberof EntityResponse
     */
    actions?: Array<ActionResponse>;
}

/**
 * Check if a given object implements the EntityResponse interface.
 */
export function instanceOfEntityResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EntityResponseFromJSON(json: any): EntityResponse {
    return EntityResponseFromJSONTyped(json, false);
}

export function EntityResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entity': !exists(json, 'entity') ? undefined : json['entity'],
        'actions': !exists(json, 'actions') ? undefined : ((json['actions'] as Array<any>).map(ActionResponseFromJSON)),
    };
}

export function EntityResponseToJSON(value?: EntityResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entity': value.entity,
        'actions': value.actions === undefined ? undefined : ((value.actions as Array<any>).map(ActionResponseToJSON)),
    };
}

